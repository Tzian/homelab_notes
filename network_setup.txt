// Homelab Inventory Example

master1 192.168.?.? - Virtual Box Ubuntu Server on Windows Machine
master2 192.168.?.? - Ubuntu Server
workerB 192.168.?.? - Ubuntu Desktop (machines that are also providing gui for specific graphical application usage)
workerD 192.168.?.? - Ubuntu Server
workerS 192.168.?.? - Ubuntu Desktop
workerM 192.168.?.? - Ubuntu Server

// haha yes i see it, the letters are in fact reference to physical machines location, with hilarious results

// Dev tools implemented from: (Note: at my current level of experience, i have been unable to get 2 way communication
// working, so for now others on the network cannot communicate back, only receive commands from this machine, which
// is good enough for now)
overseer - wsl2 Ubuntu Server on Windows Machine

// Special Guest - We have this old laptop which the other half uses from the woodworking shop or
// barn to view files kept in storage, so this is to remind me to monitor it and update as needed
laptopName 192.168.?.? - low resource laptop using Lubuntu, added in for manual updating and monitoring

------------------------------------------------------------------------------------------------------------------------

// On each remote machine install latest Ubuntu LTS as specified above
// Set initial user to a chosen admin name and password

// if not done during installation, install ssh
sudo apt install openssh-server
sudo systemctl enable ssh
sudo systemctl start ssh

------------------------------------------------------------------------------------------------------------------------
// Overseer Only

// This is a WSL installation of the latest Ubuntu LTS, do not use the same admin name/password as the remote machines.
// Use the following to create your own private key, or use the one issued by the host provider

// To generate a new 4096 bits SSH key pair with your email address as a comment
// You will be prompted to specify the file name: (/home/chosen_admin_name/.ssh/id_rsa)
// Press Enter to accept and continue.
// Leave the passphrase empty, just Press Enter
// Output should be - /home/chosen_admin_name/.ssh/id_rsa /home/chosen_admin_name/.ssh/id_rsa.pub
ssh-keygen -t rsa -b 4096 -C "your_email_address"

// Give each remote machine a copy of the public key
ssh-copy-id chosen_admin_name@remote_ip_address

// create ssh configuration file
nano ~/.ssh/config

// list your remote servers like so
Host chosen_host_name (eg: master1, worker1, aws3, however you find easiest to refer to them)
    HostName servers_url
    User chosen_admin_name
    Port 22

Host chosen_host_name
    HostName servers_url
    User chosen_admin_name
    Port 22

// save and exit

// set permissions
chmod 600 ~/.ssh/config

// *********** Follow ansible_setup.txt instructions, then return to here *********** //

// Create secure_server.yml playbook
// Going to need community.general.ufw so install that now
ansible-galaxy collection install community.general

nano ~/ansible/playbooks/secure_server/main.yml

// add the following, ensuring to change things like your_chosen_port to the actual port you have chosen :D
---
- hosts: all
  become: true

  handlers:
    - name: restart ssh
      service:
        name: sshd
        state: restarted

  tasks:
    - name: Apt Update and Upgrade
      apt:
        update_cache: true
        cache_valid_time: 3600
        upgrade: 'yes'

    - name: Make SSH more secure
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        validate: 'sshd -T -f %s'
      with_items:
        - regexp: "^#?PasswordAuthentication"
          line: "PasswordAuthentication no"
        - regexp: "^#?PermitRootLogin"
          line: "PermitRootLogin no"
        - regexp: "^#?Port"
          line: "Port your_chosen_port"
        - regexp: "^#?ChallengeResponseAuthentication"
          line: "ChallengeResponseAuthentication no"
        - regexp: "^#?UsePAM"
          line: "UsePAM no"
      notify: restart ssh

    - name: Edit file permissions
      file:
        path: /etc/ssh/sshd_config
        mode: 0600

    - name: Deny all access to port 22
      community.general.ufw:
        rule: deny
        port: '22'

    - name: Allow access to port your_chosen_port
      community.general.ufw:
        rule: allow
        port: your_chosen_port

    - name: Auto remove unused packages
      apt:
        autoremove: 'yes'
        purge: 'yes'


// save and exit

// run the playbook - you will be asked for the Become(sudo) password because of the -K flag
ansible-playbook -K ~/ansible/secure.yml

// test connection to each remote machine
ssh -p your_chosen_port chosen_admin_name@remote_ip_address

// Update the ssh config file made earlier
nano ~/.ssh/config

// for each remote host changed by the secure_server playbook, update the Port: entry to your chosen port
Host remote_server_name
    HostName servers_url
    User chosen_admin_name
    Port your_chosen_port

// save and exit

// test connection to the changed remote machine using the hostname you gave it eg:
ssh master1

// For machines with GUI, create a non sudoer user with a chosen name and password,
// to allow others to use graphical applications on it.
sudo adduser chosen_name
