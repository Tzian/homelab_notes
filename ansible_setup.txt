// On your Dev machine, push to github for overseer to clone/update from

// Create ansible project folder where all the playbooks/roles etc will be created
mkdir ~/ansible

// Create the inventory file
nano ~/ansible/inventory

// Add nodes and groups
[masters]
master1
master2

[workers]
workerB
workerD
workerS
workerM

[all:children]
masters
workers

[lubuntu]
laptopName

// save and exit

// Create a group vars folder and yml file within
mkdir ~/ansible/group_vars
nano ~/ansible/group_vars/all.yml

// add the following
---
ansible_python_interpreter: /usr/bin/python3
ansible_user: chosen_admin_name

// save and exit

// check what is seen in the inventory file
ansible-inventory -i ~/ansible/inventory --list

// test
ansible -i ~/ansible/inventory all -m ping

// override ansible defaults
// create config file
nano ~/ansible.cfg

// Configure like this to tell ansible where to find the inventory file
[defaults]
INVENTORY = ~/ansible/inventory

[ssh_connection]
pipelining = True

// test ping, free memory and date sync from ~/
ansible all -m ping
ansible all -a "free -h"
ansible all -a "date"

// Install lints
sudo apt install yamllint
sudo apt install ansible-lint

// Create .yamllint file and add desired configurations
nano ~/ansible/.yamllint

// eg:
---
extends: default

rules:
  truthy:
    allowed-values:
      - 'true'
      - 'false'
      - 'yes'
      - 'no'

// save and exit

// lint usage (-c used to indicate where .yamllint config file is located)
// ideally should be set as an env var, but atm having trouble with getting them to persist on WSL
yamllint -c ~/ansible/.yamllint ~/ansible
ansible-lint ~/ansible


// Create secure_server.yml playbook
// Going to need community.general.ufw so install that now
ansible-galaxy collection install community.general

nano ~/ansible/playbooks/secure_server/main.yml

// add the following, ensuring to change things like your_chosen_port to the actual port you have chosen :D
---
- hosts: all
  become: true

  handlers:
    - name: restart ssh
      service:
        name: sshd
        state: restarted

  tasks:
    - name: Apt Update and Upgrade
      apt:
        update_cache: true
        cache_valid_time: 3600
        upgrade: 'yes'

    - name: Make SSH more secure
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        validate: 'sshd -T -f %s'
      with_items:
        - regexp: "^#?PasswordAuthentication"
          line: "PasswordAuthentication no"
        - regexp: "^#?PermitRootLogin"
          line: "PermitRootLogin no"
        - regexp: "^#?Port"
          line: "Port your_chosen_port"
        - regexp: "^#?ChallengeResponseAuthentication"
          line: "ChallengeResponseAuthentication no"
        - regexp: "^#?UsePAM"
          line: "UsePAM no"
      notify: restart ssh

    - name: Edit file permissions
      file:
        path: /etc/ssh/sshd_config
        mode: 0600

    - name: Deny all access to port 22
      community.general.ufw:
        rule: deny
        port: '22'

    - name: Allow access to port your_chosen_port
      community.general.ufw:
        rule: allow
        port: your_chosen_port

    - name: Auto remove unused packages
      apt:
        autoremove: 'yes'
        purge: 'yes'


// save and exit
